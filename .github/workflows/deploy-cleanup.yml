name: üßπ Deploy Cleanup

on:
  pull_request:
    types:
      - closed

jobs:
  cleanup:
    name: üßπ Deploy Cleanup
    runs-on: ubuntu-latest
    steps:
      - name: üîç Find deployment ID
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch deployment event data for this PR
          RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/deployments")

          # Extract the deployment ID related to the PR branch
          PR_BRANCH=${{ github.event.pull_request.head.ref }}
          DEPLOYMENT_ID=$(echo "$RESPONSE" | jq -r --arg branch "$PR_BRANCH" \
            '.[] | select(.ref == $branch) | .id' | head -n 1)

          if [ -z "$DEPLOYMENT_ID" ]; then
            echo "No deployment found for this PR."
            exit 0
          fi

          echo "Found Deployment ID: $DEPLOYMENT_ID"
          echo "deployment_id=$DEPLOYMENT_ID" >> $GITHUB_ENV

      - name: üóëÔ∏è Remove Cloudflare Preview Deployment
        if: env.deployment_id != ''
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_PROJECT_NAME: ${{ vars.CLOUDFLARE_PROJECT_NAME }}
          DEPLOYMENT_ID: ${{ env.deployment_id }}
        run: |
          echo "Deleting Cloudflare Pages deployment: $DEPLOYMENT_ID"
          curl -X DELETE "https://api.cloudflare.com/client/v4/accounts/$CLOUDFLARE_ACCOUNT_ID/pages/projects/$CLOUDFLARE_PROJECT_NAME/deployments/$DEPLOYMENT_ID" \
            -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
            -H "Content-Type: application/json" \
            -o response.json

          # Check if the deletion was successful
          if grep -q '"success":true' response.json; then
            echo "‚úÖ Successfully deleted deployment."
          else
            echo "‚ùå Failed to delete deployment."
            cat response.json
            exit 1
          fi
